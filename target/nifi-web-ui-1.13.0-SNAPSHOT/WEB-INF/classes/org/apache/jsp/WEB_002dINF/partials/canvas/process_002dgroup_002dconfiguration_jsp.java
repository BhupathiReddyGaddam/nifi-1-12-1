/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2020-12-23 22:12:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.partials.canvas;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class process_002dgroup_002dconfiguration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<div id=\"process-group-configuration\">\r\n    <div id=\"process-group-configuration-header-text\" class=\"settings-header-text\">Process Group Configuration</div>\r\n    <div class=\"settings-container\">\r\n        <div>\r\n            <div id=\"process-group-configuration-tabs\" class=\"settings-tabs tab-container\"></div>\r\n            <div class=\"clear\"></div>\r\n        </div>\r\n        <div id=\"process-group-configuration-tabs-content\">\r\n            <button id=\"add-process-group-configuration-controller-service\" class=\"add-button fa fa-plus\" title=\"Create a new controller service\"></button>\r\n            <div id=\"general-process-group-configuration-tab-content\" class=\"configuration-tab\">\r\n                <div id=\"general-process-group-configuration\">\r\n                    <div class=\"setting\">\r\n                        <div class=\"setting-name\">Process group name</div>\r\n                        <span id=\"process-group-id\" class=\"hidden\"></span>\r\n                        <div class=\"editable setting-field\">\r\n                            <input type=\"text\" id=\"process-group-name\" class=\"setting-input\"/>\r\n");
      out.write("                        </div>\r\n                        <div class=\"read-only setting-field\">\r\n                            <span id=\"read-only-process-group-name\" class=\"unset\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"setting\">\r\n                        <div class=\"setting-name\">Process group parameter context</div>\r\n                        <div class=\"editable setting-field\">\r\n                            <div id=\"process-group-parameter-context-combo\"></div>\r\n                        </div>\r\n                        <div class=\"read-only setting-field\">\r\n                            <span id=\"read-only-process-group-parameter-context\" class=\"unset\">Unauthorized</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"setting\">\r\n                        <div class=\"setting-name\">Process group comments</div>\r\n                        <div class=\"editable setting-field\">\r\n                            <textarea id=\"process-group-comments\" class=\"setting-input\"></textarea>\r\n");
      out.write("                        </div>\r\n                        <div class=\"read-only setting-field\">\r\n                            <span id=\"read-only-process-group-comments\" class=\"unset\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"setting\">\r\n                        <div class=\"setting-name\">Process group FlowFile concurrency</div>\r\n                        <div class=\"editable setting-field\">\r\n                            <div id=\"process-group-flowfile-concurrency-combo\"></div>\r\n                        </div>\r\n                        <div class=\"read-only setting-field\">\r\n                            <span id=\"read-only-process-group-flowfile-concurrency\" class=\"unset\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"setting\">\r\n                        <div class=\"setting-name\">Process group outbound policy</div>\r\n                        <div class=\"editable setting-field\">\r\n                            <div id=\"process-group-outbound-policy-combo\"></div>\r\n");
      out.write("                        </div>\r\n                        <div class=\"read-only setting-field\">\r\n                            <span id=\"read-only-process-group-outbound-policy\" class=\"unset\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"editable settings-buttons\">\r\n                        <div id=\"process-group-configuration-save\" class=\"button\">Apply</div>\r\n                        <div class=\"clear\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"process-group-controller-services-tab-content\" class=\"configuration-tab\">\r\n                <div id=\"process-group-controller-services-table\" class=\"settings-table\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div id=\"process-group-refresh-container\">\r\n        <button id=\"process-group-configuration-refresh-button\" class=\"refresh-button pointer fa fa-refresh\" title=\"Refresh\"></button>\r\n        <div class=\"last-refreshed-container\">\r\n            Last updated:&nbsp;<span id=\"process-group-configuration-last-refreshed\" class=\"last-refreshed\"></span>\r\n");
      out.write("        </div>\r\n        <div id=\"process-group-configuration-loading-container\" class=\"loading-container\"></div>\r\n        <div id=\"flow-cs-availability\" class=\"hidden\">Listed services are available to all descendant Processors and services of this Process Group.</div>\r\n        <div class=\"clear\"></div>\r\n    </div>\r\n</div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
