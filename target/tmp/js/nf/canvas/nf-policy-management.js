(function(a,b){if(typeof define==="function"&&define.amd){define(["jquery","Slick","nf.ErrorHandler","nf.Common","nf.Client","nf.Storage","nf.CanvasUtils","nf.ng.Bridge","nf.Dialog","nf.Shell"],function(h,d,k,e,l,i,f,j,g,c){return(nf.PolicyManagement=b(h,d,k,e,l,i,f,j,g,c))})}else{if(typeof exports==="object"&&typeof module==="object"){module.exports=(nf.PolicyManagement=b(require("jquery"),require("Slick"),require("nf.ErrorHandler"),require("nf.Common"),require("nf.Client"),require("nf.Storage"),require("nf.CanvasUtils"),require("nf.ng.Bridge"),require("nf.Dialog"),require("nf.Shell")))}else{nf.PolicyManagement=b(a.$,a.Slick,a.nf.ErrorHandler,a.nf.Common,a.nf.Client,a.nf.Storage,a.nf.CanvasUtils,a.nf.ng.Bridge,a.nf.Dialog,a.nf.Shell)}}}(this,function(z,a,e,I,g,u,L,p,h,H){var D={urls:{api:"../nifi-api",searchTenants:"../nifi-api/tenants/search-results"}};var i=false;var j=false;var q=false;var v=function(){z("#new-policy-user-button").on("click",function(){z("#search-users-dialog").modal("show");z("#search-users-field").focus()});z("#delete-policy-button").on("click",function(){y()});z("#search-users-dialog").modal({scrollableContentStyle:"scrollable",headerText:"Add Users/Groups",buttons:[{buttonText:"Add",color:{base:"#728E9B",hover:"#004849",text:"#ffffff"},handler:{click:function(){var O=z("#policy-table").data("gridInstance");var N=O.getData();N.beginUpdate();z.each(f(z("#allowed-users")),function(Q,P){N.addItem(P)});z.each(f(z("#allowed-groups")),function(P,Q){N.addItem(Q)});N.endUpdate();J();z("#search-users-dialog").modal("hide")}}},{buttonText:"Cancel",color:{base:"#E3E8EB",hover:"#C7D2D7",text:"#004849"},handler:{click:function(){z("#search-users-dialog").modal("hide")}}}],handler:{close:function(){z("#search-users-field").userSearchAutocomplete("reset").val("");z("#allowed-users, #allowed-groups").empty()}}});z(document).on("click","div.remove-allowed-entity",function(){z(this).closest("li").remove()});z.widget("nf.userSearchAutocomplete",z.ui.autocomplete,{reset:function(){this.term=null},_create:function(){this._super();this.widget().menu("option","items","> :not(.search-no-matches)")},_normalize:function(O){var N=[];N.push(O);return N},_renderMenu:function(Q,O){var S=O[0];var P=K();var R=o();var N=this;z.each(S.userGroups,function(T,U){if(z.inArray(U.id,P)===-1){N._renderGroup(Q,z.extend({type:"group"},U))}});z.each(S.users,function(T,U){if(z.inArray(U.id,R)===-1){N._renderUser(Q,z.extend({type:"user"},U))}});if(Q.children().length===0){Q.append('<li class="unset search-no-matches">No users matched the search terms</li>')}},_resizeMenu:function(){var N=this.menu.element;N.width(z("#search-users-field").outerWidth()-2)},_renderUser:function(P,O){var N=z("<a></a>").text(O.component.identity);return z("<li></li>").data("ui-autocomplete-item",O).append(N).appendTo(P)},_renderGroup:function(O,N){var Q=z("<span></span>").text(N.component.identity);var P=z("<a></a>").append('<div class="fa fa-users"></div>').append(Q);return z("<li></li>").data("ui-autocomplete-item",N).append(P).appendTo(O)}});z("#search-users-field").userSearchAutocomplete({minLength:0,appendTo:"#search-users-results",position:{my:"left top",at:"left bottom",offset:"0 1"},source:function(O,N){z.ajax({type:"GET",data:{q:O.term},dataType:"json",url:D.urls.searchTenants}).done(function(P){N(P)})},select:function(N,O){A(O.item);z(this).val("");return false}})};var K=function(){var Q=z("#policy-table").data("gridInstance");var P=Q.getData();var O=[];var N=P.getItems();z.each(N,function(R,S){if(S.type==="group"){O.push(S.id)}});z.each(f(z("#allowed-groups")),function(R,S){O.push(S.id)});return O};var f=function(N){var O=[];N.children("li").each(function(Q,P){var R=z(P).data("tenant");if(I.isDefinedAndNotNull(R)){O.push(R)}});return O};var o=function(){var Q=z("#policy-table").data("gridInstance");var O=Q.getData();var P=[];var N=O.getItems();z.each(N,function(R,S){if(S.type==="user"){P.push(S.id)}});z.each(f(z("#allowed-users")),function(S,R){P.push(R.id)});return P};var A=function(N){var P=N.type==="user"?z("#allowed-users"):z("#allowed-groups");var Q=z("<span></span>").addClass("allowed-entity ellipsis").text(N.component.identity).ellipsis();var O=z("<div></div>").addClass("remove-allowed-entity fa fa-trash");z("<li></li>").data("tenant",N).append(Q).append(O).appendTo(P)};var d=function(N){return N==="controller"||N==="parameter-contexts"||N==="counters"||N==="policies"||N==="tenants"};var m=function(N){return N==="proxy"||N==="restricted-components"};var B=function(){z("#override-policy-dialog").modal({headerText:"Override Policy",buttons:[{buttonText:"Override",color:{base:"#728E9B",hover:"#004849",text:"#ffffff"},handler:{click:function(){k(z("#copy-policy-radio-button").is(":checked"));z(this).modal("hide")}}},{buttonText:"Cancel",color:{base:"#E3E8EB",hover:"#C7D2D7",text:"#004849"},handler:{click:function(){z(this).modal("hide")}}}],handler:{close:function(){z("#copy-policy-radio-button").prop("checked",true)}}});z("#create-policy-link, #add-local-admin-link").on("click",function(){k(false)});z("#override-policy-link").on("click",function(){z("#override-policy-dialog").modal("show")});z("#policy-type-list").combo({options:[I.getPolicyTypeListing("flow"),I.getPolicyTypeListing("controller"),I.getPolicyTypeListing("parameter-contexts"),I.getPolicyTypeListing("provenance"),I.getPolicyTypeListing("restricted-components"),I.getPolicyTypeListing("policies"),I.getPolicyTypeListing("tenants"),I.getPolicyTypeListing("site-to-site"),I.getPolicyTypeListing("system"),I.getPolicyTypeListing("proxy"),I.getPolicyTypeListing("counters")],select:function(X){if(i){z("#selected-policy-type").text(X.value);if(d(X.value)){z("#restricted-component-required-permissions").hide();z("#restriction-message").hide();z("#controller-policy-target").combo("setSelectedOption",{value:"read"}).show()}else{z("#controller-policy-target").hide();if(m(X.value)){z("#selected-policy-action").text("write")}else{z("#selected-policy-action").text("read")}if(X.value==="restricted-components"){if(!j){var W="regardless of restrictions";var T=L.getComponentRestrictions();var V=T.requiredPermissions;var U=[{text:W,value:"",description:"Allows users to create/modify all restricted components regardless of restrictions."}];V.each(function(Y,Z){if(Z!==X.value){U.push({text:"requiring '"+Y+"'",value:Z,description:"Allows users to create/modify restricted components requiring '"+I.escapeHtml(Y)+"'"})}});U.sort(function(Z,Y){if(Z.text===W){return -1}else{if(Y.text===W){return 1}}return Z.text<Y.text?-1:Z.text>Y.text?1:0});z("#restricted-component-required-permissions").combo({options:U,select:function(Y){if(Y.text===W){z("#restriction-message").hide()}else{z("#restriction-message").show()}b()}})}z("#restricted-component-required-permissions").show()}else{z("#restriction-message").hide();z("#restricted-component-required-permissions").hide()}b()}}}});z("#controller-policy-target").combo({options:[{text:"view",value:"read"},{text:"modify",value:"write"}],select:function(T){if(i){z("#selected-policy-action").text(T.value);b()}}});z("#component-policy-target").combo({options:[{text:"view the component",value:"read-component",description:"Allows users to view component configuration details"},{text:"modify the component",value:"write-component",description:"Allows users to modify component configuration details"},{text:"operate the component",value:"operate-component",description:"Allows users to operate components by changing component run status (start/stop/enable/disable), remote port transmission status, or terminating processor threads"},{text:"view provenance",value:"read-provenance",description:"Allows users to view provenance events generated by this component"},{text:"view the data",value:"read-data",description:"Allows users to view metadata and content for this component in flowfile queues in outbound connections and through provenance events"},{text:"modify the data",value:"write-data",description:"Allows users to empty flowfile queues in outbound connections and submit replays through provenance events"},{text:"receive data via site-to-site",value:"write-receive-data",description:"Allows this port to receive data from these NiFi instances",disabled:true},{text:"send data via site-to-site",value:"write-send-data",description:"Allows this port to send data to these NiFi instances",disabled:true},{text:"view the policies",value:"read-policies",description:"Allows users to view the list of users who can view/modify this component"},{text:"modify the policies",value:"write-policies",description:"Allows users to modify the list of users who can view/modify this component"}],select:function(T){if(i){var U=z("#selected-policy-component-type").text();if(T.value==="read-component"){z("#selected-policy-action").text("read")}else{if(T.value==="write-component"){z("#selected-policy-action").text("write")}else{if(T.value==="operate-component"){z("#selected-policy-action").text("write");U=("operation/"+U)}else{if(T.value==="read-data"){z("#selected-policy-action").text("read");U=("data/"+U)}else{if(T.value==="write-data"){z("#selected-policy-action").text("write");U=("data/"+U)}else{if(T.value==="read-provenance"){z("#selected-policy-action").text("read");U=("provenance-data/"+U)}else{if(T.value==="read-policies"){z("#selected-policy-action").text("read");U=("policies/"+U)}else{if(T.value==="write-policies"){z("#selected-policy-action").text("write");U=("policies/"+U)}else{if(T.value==="write-receive-data"){z("#selected-policy-action").text("write");U="data-transfer/input-ports"}else{if(T.value==="write-send-data"){z("#selected-policy-action").text("write");U="data-transfer/output-ports"}}}}}}}}}}z("#selected-policy-type").text(U);if(!q){b()}}}});var N=function(Y,U,X,W,T){var V="";if(T.type==="group"){V+='<div class="fa fa-users"></div>'}V+=I.escapeHtml(T.component.identity);return V};var R=function(aa,V,Z,X,U){var W="";var T=z("#policy-table").data("policy");var Y=z("#delete-policy-button").is(":disabled")===false;if(T.permissions.canWrite===true&&Y){W+='<div title="Remove" class="pointer delete-user fa fa-trash"></div>'}return W};var Q=[{id:"identity",name:"User",sortable:true,resizable:true,formatter:N}];if(L.isConfigurableAuthorizer()){Q.push({id:"actions",name:"&nbsp;",sortable:false,resizable:false,formatter:R,width:100,maxWidth:100})}var P={forceFitColumns:true,enableTextSelectionOnCells:true,enableCellNavigation:true,enableColumnReorder:false,autoEdit:false};var O=new a.Data.DataView({inlineFilters:false});O.setItems([]);M({columnId:"identity",sortAsc:true},O);var S=new a.Grid("#policy-table",O,Q,P);S.setSelectionModel(new a.RowSelectionModel());S.registerPlugin(new a.AutoTooltips());S.setSortColumn("identity",true);S.onSort.subscribe(function(U,T){M({columnId:T.sortCol.id,sortAsc:T.sortAsc},O)});S.onClick.subscribe(function(W,T){var V=z(W.target);var U=O.getItem(T.row);if(S.getColumns()[T.cell].id==="actions"){if(V.hasClass("delete-user")){G(U)}}});O.onRowCountChanged.subscribe(function(U,T){S.updateRowCount();S.render();z("#displayed-policy-users").text(T.current)});O.onRowsChanged.subscribe(function(U,T){S.invalidateRows(T.rows);S.render()});z("#policy-table").data("gridInstance",S);z("#displayed-policy-users").text("0")};var M=function(N,P){var O=function(S,Q){if(S.permissions.canRead&&Q.permissions.canRead){var R=I.isDefinedAndNotNull(S.component[N.columnId])?S.component[N.columnId]:"";var T=I.isDefinedAndNotNull(Q.component[N.columnId])?Q.component[N.columnId]:"";return R===T?0:R>T?1:-1}else{if(!S.permissions.canRead&&!Q.permissions.canRead){return 0}if(S.permissions.canRead){return 1}else{return -1}}};P.sort(O,N.sortAsc)};var G=function(N){h.showYesNoDialog({headerText:"Update Policy",dialogContent:"Remove '"+I.escapeHtml(N.component.identity)+"' from this policy?",yesHandler:function(){r(N)}})};var r=function(O){var P=z("#policy-table").data("gridInstance");var N=P.getData();N.beginUpdate();N.deleteItem(O.id);N.endUpdate();J()};var y=function(){h.showYesNoDialog({headerText:"Delete Policy",dialogContent:"By deleting this policy, the permissions for this component will revert to the inherited policy if applicable.",yesText:"Delete",noText:"Cancel",yesHandler:function(){l()}})};var l=function(){var N=z("#policy-table").data("policy");var O=g.getRevision(N);if(I.isDefinedAndNotNull(N)){z.ajax({type:"DELETE",url:N.uri+"?"+z.param(z.extend({disconnectedNodeAcknowledged:u.isDisconnectionAcknowledged()},O)),dataType:"json"}).done(function(){b()}).fail(function(R,P,Q){e.handleAjaxError(R,P,Q);t();b()})}else{h.showOkDialog({headerText:"Delete Policy",dialogContent:"No policy selected"})}};var n=function(){var N=z("#selected-policy-component-id").text();var P=z("#selected-policy-type").text();if(N!==""){P+=("/"+N)}if(P==="restricted-components"){var O=z("#restricted-component-required-permissions").combo("getSelectedOption").value;if(!I.isBlank(O)){P+=("/"+O)}}return{action:z("#selected-policy-action").text(),resource:"/"+P}};var E=function(R,P){var Q=z("#policy-table").data("gridInstance");var O=Q.getData();O.beginUpdate();var N=[];z.each(R,function(T,S){N.push(z.extend({type:"user"},S))});z.each(P,function(S,T){N.push(z.extend({type:"group"},T))});O.setItems(N);O.endUpdate();O.reSort();Q.invalidate();Q.getSelectionModel().setSelectedRows([])};var s=function(Q){if(Q==="/policies"){return z("<span>Showing effective policy inherited from all policies.</span>")}else{if(Q==="/controller"){return z("<span>Showing effective policy inherited from the controller.</span>")}else{if(Q==="/parameter-contexts"){return z("<span>Showing effective policy inherited from global parameter context policy.</span>")}else{var N=I.substringAfterLast(Q,"/");var P=N;var O=p.injector.get("breadcrumbsCtrl").getBreadcrumbs();z.each(O,function(R,S){if(S.id===N){P=S.label;return false}});return z("<span>Showing effective policy inherited from Process Group </span>").append(z('<span class="link ellipsis" style="max-width: 200px; vertical-align: top;"></span>').text(P).attr("title",P).on("click",function(){z("#shell-close-button").click();L.getComponentByType("ProcessGroup").enterGroup(N).done(function(){L.getSelection().classed("selected",false);p.digest()})})).append("<span>.</span>")}}}};var w=function(O){var P=O.component;var N=n();c();z("#policy-table").data("policy",O);if(N.resource===P.resource){if(L.isConfigurableAuthorizer()){z("#delete-policy-button").prop("disabled",P.configurable===false||O.permissions.canWrite===false);z("#new-policy-user-button").prop("disabled",P.configurable===false||O.permissions.canWrite===false)}}else{z("#policy-message").append(s(P.resource));if(L.isConfigurableAuthorizer()){z("#override-policy-message").show();z("#delete-policy-button").prop("disabled",true);z("#new-policy-user-button").prop("disabled",true)}}E(P.users,P.userGroups)};var b=function(){var N=n();var O;if(N.resource.startsWith("/policies")){if(N.resource.endsWith("/policies")){z("#admin-policy-message").show()}O=z.Deferred(function(P){z.ajax({type:"GET",url:"../nifi-api/policies/"+N.action+N.resource,dataType:"json"}).done(function(Q){z("#policy-last-refreshed").text(Q.generated);if(Q.permissions.canRead===true){var R=Q.component;if(N.resource===R.resource){w(Q)}else{t();z("#policy-message").text("No component specific administrators.");if(L.isConfigurableAuthorizer()){z("#add-local-admin-message").show()}}}else{t();z("#policy-message").text("No component specific administrators.");if(L.isConfigurableAuthorizer()){z("#add-local-admin-message").show()}}P.resolve()}).fail(function(S,Q,R){if(S.status===404){t();z("#policy-message").text("No component specific administrators.");if(L.isConfigurableAuthorizer()){z("#add-local-admin-message").show()}P.resolve()}else{if(S.status===403){t();z("#policy-message").text("Not authorized to access the policy for the specified resource.");P.resolve()}else{t();P.reject();e.handleAjaxError(S,Q,R)}}})}).promise()}else{if(N.resource.startsWith("/restricted-components")){z("#admin-policy-message").hide();O=z.Deferred(function(P){z.ajax({type:"GET",url:"../nifi-api/policies/"+N.action+N.resource,dataType:"json"}).done(function(Q){z("#policy-last-refreshed").text(Q.generated);if(Q.permissions.canRead===true){var R=Q.component;if(N.resource===R.resource){w(Q)}else{t();z("#policy-message").text("No restriction specific users.");if(L.isConfigurableAuthorizer()){z("#new-policy-message").show()}}}else{t();z("#policy-message").text("Not authorized to view the policy.");if(L.isConfigurableAuthorizer()){z("#new-policy-message").show()}}P.resolve()}).fail(function(S,Q,R){if(S.status===404){t();if(N.resource==="/restricted-components"){z("#policy-message").text('No users with permission "regardless of restrictions."')}else{z("#policy-message").text("No users with permission to specific restriction.")}if(L.isConfigurableAuthorizer()){z("#new-policy-message").show()}P.resolve()}else{if(S.status===403){t();z("#policy-message").text("Not authorized to access the policy for the specified resource.");P.resolve()}else{t();P.reject();e.handleAjaxError(S,Q,R)}}})}).promise()}else{z("#admin-policy-message").hide();O=z.Deferred(function(P){z.ajax({type:"GET",url:"../nifi-api/policies/"+N.action+N.resource,dataType:"json"}).done(function(Q){z("#policy-last-refreshed").text(Q.generated);if(Q.permissions.canRead===true){w(Q)}else{t();z("#policy-message").text("Not authorized to view the policy.");if(L.isConfigurableAuthorizer()){z("#override-policy-message").show()}}P.resolve()}).fail(function(S,Q,R){if(S.status===404){t();z("#policy-message").text("No policy for the specified resource.");if(L.isConfigurableAuthorizer()){z("#new-policy-message").show()}P.resolve()}else{if(S.status===403){t();z("#policy-message").text("Not authorized to access the policy for the specified resource.");P.resolve()}else{t();P.reject();e.handleAjaxError(S,Q,R)}}})}).promise()}}return O};var k=function(S){var R=n();var U=[];var Q=[];if(S===true){var T=z("#policy-table").data("gridInstance");var P=T.getData();var O=P.getItems();z.each(O,function(W,X){var V=z.extend({},X);if(V.type==="user"){U.push(V)}else{Q.push(V)}delete V.type})}var N={revision:g.getRevision({revision:{version:0}}),disconnectedNodeAcknowledged:u.isDisconnectionAcknowledged(),component:{action:R.action,resource:R.resource,users:U,userGroups:Q}};z.ajax({type:"POST",url:"../nifi-api/policies",data:JSON.stringify(N),dataType:"json",contentType:"application/json"}).done(function(V){if(V.permissions.canRead===true){w(V)}else{t();b()}}).fail(e.handleAjaxError)};var J=function(){var T=z("#policy-table").data("gridInstance");var R=T.getData();var S=[];var Q=[];var P=R.getItems();z.each(P,function(V,W){var U=z.extend({},W);if(U.type==="user"){S.push(U)}else{Q.push(U)}delete U.type});var N=z("#policy-table").data("policy");if(I.isDefinedAndNotNull(N)){var O={revision:g.getRevision(N),disconnectedNodeAcknowledged:u.isDisconnectionAcknowledged(),component:{id:N.id,users:S,userGroups:Q}};z.ajax({type:"PUT",url:N.uri,data:JSON.stringify(O),dataType:"json",contentType:"application/json"}).done(function(U){if(U.permissions.canRead===true){w(U)}else{t();b()}}).fail(function(W,U,V){e.handleAjaxError(W,U,V);t();b()}).always(function(){L.reload()})}else{h.showOkDialog({headerText:"Update Policy",dialogContent:"No policy selected"})}};var C=function(){H.showContent("#policy-management").always(function(){F()});x.resetTableSize()};var c=function(){z("#policy-message").text("").empty();if(L.isConfigurableAuthorizer()){z("#new-policy-message").hide();z("#override-policy-message").hide();z("#add-local-admin-message").hide()}};var t=function(){c();if(L.isConfigurableAuthorizer()){z("#delete-policy-button").prop("disabled",true);z("#new-policy-user-button").prop("disabled",true)}z("#policy-table").removeData("policy");E([],[])};var F=function(){t();z("#selected-policy-type").text("");z("#selected-policy-action").text("");z("#selected-policy-component-id").text("");z("#selected-policy-component-type").text("");z("div.policy-selected-component-container").hide()};var x={init:function(){v();B();if(L.isConfigurableAuthorizer()){z("#delete-policy-button").show();z("#new-policy-user-button").show()}z("#policy-refresh-button").on("click",function(){b()});t();i=true},resetTableSize:function(){var N=z("#policy-table");if(N.is(":visible")){var O=N.data("gridInstance");if(I.isDefinedAndNotNull(O)){O.resizeCanvas()}}},showControllerServicePolicy:function(N){q=true;c();z("#component-policy-controls").show();z("#global-policy-controls").hide();if(N.permissions.canRead===true){z("#policy-selected-controller-service-container div.policy-selected-component-name").text(N.component.name)}else{z("#policy-selected-controller-service-container div.policy-selected-component-name").text(N.id)}z("#policy-selected-controller-service-container").show();z("#selected-policy-component-id").text(N.id);z("#selected-policy-component-type").text("controller-services");z("#component-policy-target").combo("setOptionEnabled",{value:"write-receive-data"},false).combo("setOptionEnabled",{value:"write-send-data"},false).combo("setOptionEnabled",{value:"read-data"},false).combo("setOptionEnabled",{value:"read-provenance"},false).combo("setOptionEnabled",{value:"write-data"},false).combo("setSelectedOption",{value:"read-component"});q=false;return b().always(C)},showReportingTaskPolicy:function(N){q=true;c();z("#component-policy-controls").show();z("#global-policy-controls").hide();if(N.permissions.canRead===true){z("#policy-selected-reporting-task-container div.policy-selected-component-name").text(N.component.name)}else{z("#policy-selected-reporting-task-container div.policy-selected-component-name").text(N.id)}z("#policy-selected-reporting-task-container").show();z("#selected-policy-component-id").text(N.id);z("#selected-policy-component-type").text("reporting-tasks");z("#component-policy-target").combo("setOptionEnabled",{value:"write-receive-data"},false).combo("setOptionEnabled",{value:"write-send-data"},false).combo("setOptionEnabled",{value:"read-data"},false).combo("setOptionEnabled",{value:"read-provenance"},false).combo("setOptionEnabled",{value:"write-data"},false).combo("setSelectedOption",{value:"read-component"});q=false;return b().always(C)},showTemplatePolicy:function(N){q=true;c();z("#component-policy-controls").show();z("#global-policy-controls").hide();if(N.permissions.canRead===true){z("#policy-selected-template-container div.policy-selected-component-name").text(N.template.name)}else{z("#policy-selected-template-container div.policy-selected-component-name").text(N.id)}z("#policy-selected-template-container").show();z("#selected-policy-component-id").text(N.id);z("#selected-policy-component-type").text("templates");z("#component-policy-target").combo("setOptionEnabled",{value:"operate-component"},false).combo("setOptionEnabled",{value:"write-receive-data"},false).combo("setOptionEnabled",{value:"write-send-data"},false).combo("setOptionEnabled",{value:"read-data"},false).combo("setOptionEnabled",{value:"read-provenance"},false).combo("setOptionEnabled",{value:"write-data"},false).combo("setSelectedOption",{value:"read-component"});q=false;return b().always(C)},showParameterContextPolicy:function(N){q=true;c();z("#component-policy-controls").show();z("#global-policy-controls").hide();if(N.permissions.canRead===true){z("#policy-selected-parameter-context-container div.policy-selected-component-name").text(N.component.name)}else{z("#policy-selected-parameter-context-container div.policy-selected-component-name").text(N.id)}z("#policy-selected-parameter-context-container").show();z("#selected-policy-component-id").text(N.id);z("#selected-policy-component-type").text("parameter-contexts");z("#component-policy-target").combo("setOptionEnabled",{value:"operate-component"},false).combo("setOptionEnabled",{value:"write-receive-data"},false).combo("setOptionEnabled",{value:"write-send-data"},false).combo("setOptionEnabled",{value:"read-data"},false).combo("setOptionEnabled",{value:"read-provenance"},false).combo("setOptionEnabled",{value:"write-data"},false).combo("setSelectedOption",{value:"read-component"});q=false;return b().always(C)},showComponentPolicy:function(N){q=true;c();z("#component-policy-controls").show();z("#global-policy-controls").hide();z("#policy-selected-component-container").show();var O;if(N.empty()){z("#selected-policy-component-id").text(L.getGroupId());O="process-groups";z("#component-policy-target").combo("setOptionEnabled",{value:"operate-component"},true).combo("setOptionEnabled",{value:"write-receive-data"},false).combo("setOptionEnabled",{value:"write-send-data"},false).combo("setOptionEnabled",{value:"read-data"},true).combo("setOptionEnabled",{value:"read-provenance"},true).combo("setOptionEnabled",{value:"write-data"},true)}else{var P=N.datum();z("#selected-policy-component-id").text(P.id);if(L.isProcessor(N)){O="processors"}else{if(L.isProcessGroup(N)){O="process-groups"}else{if(L.isInputPort(N)){O="input-ports"}else{if(L.isOutputPort(N)){O="output-ports"}else{if(L.isRemoteProcessGroup(N)){O="remote-process-groups"}else{if(L.isLabel(N)){O="labels"}else{if(L.isFunnel(N)){O="funnels"}}}}}}}z("#component-policy-target").combo("setOptionEnabled",{value:"operate-component"},!L.isLabel(N)).combo("setOptionEnabled",{value:"write-receive-data"},L.isInputPort(N)&&P.allowRemoteAccess===true).combo("setOptionEnabled",{value:"write-send-data"},L.isOutputPort(N)&&P.allowRemoteAccess===true).combo("setOptionEnabled",{value:"read-data"},!L.isLabel(N)).combo("setOptionEnabled",{value:"write-data"},!L.isLabel(N))}z("#selected-policy-component-type").text(O);z("#component-policy-target").combo("setSelectedOption",{value:"read-component"});q=false;return b().always(C)},showGlobalPolicies:function(){c();z("#component-policy-controls").hide();z("#global-policy-controls").show();var N=z("#policy-type-list").combo("getSelectedOption").value;z("#selected-policy-type").text(N);if(d(N)){z("#selected-policy-action").text(z("#controller-policy-target").combo("getSelectedOption").value)}else{if(m(N)){z("#selected-policy-action").text("write")}else{z("#selected-policy-action").text("read")}}return b().always(C)}};return x}));