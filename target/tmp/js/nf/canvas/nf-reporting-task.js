(function(a,b){if(typeof define==="function"&&define.amd){define(["jquery","nf.ErrorHandler","nf.Common","nf.Dialog","nf.Storage","nf.Client","nf.ControllerService","nf.ControllerServices","nf.UniversalCapture","nf.CustomUi"],function(f,j,d,e,g,l,k,c,h,i){return(nf.ReportingTask=b(f,j,d,e,g,l,k,c,h,i))})}else{if(typeof exports==="object"&&typeof module==="object"){module.exports=(nf.ReportingTask=b(require("jquery"),require("nf.ErrorHandler"),require("nf.Common"),require("nf.Dialog"),require("nf.Storage"),require("nf.Client"),require("nf.ControllerService"),require("nf.ControllerServices"),require("nf.UniversalCapture"),require("nf.CustomUi")))}else{nf.ReportingTask=b(a.$,a.nf.ErrorHandler,a.nf.Common,a.nf.Dialog,a.nf.Storage,a.nf.Client,a.nf.ControllerService,a.nf.ControllerServices,a.nf.UniversalCapture,a.nf.CustomUi)}}}(this,function(f,h,j,m,g,v,a,c,o,d){var s;var t={edit:"edit",readOnly:"read-only",urls:{api:"../nifi-api"}};var i=t.urls.api+"/flow/controller/controller-services";var b=function(){return f("#controller-services-table")};var w=function(){var y=f("#reporting-task-configuration").data("reportingTaskDetails");if(f("#reporting-task-name").val()!==y.component.name){return true}if(f("#reporting-task-comments").val()!==y.component.comments){return true}if(f("#reporting-task-enabled").hasClass("checkbox-checked")&&y.component.state==="DISABLED"){return true}else{if(f("#reporting-task-enabled").hasClass("checkbox-unchecked")&&(y.component.state==="RUNNING"||y.component.state==="STOPPED")){return true}}var z=f("#reporting-task-scheduling-strategy-combo").combo("getSelectedOption").value;if(z!==(y.component.schedulingStrategy+"")){return true}var x;if(z==="CRON_DRIVEN"){x=f("#reporting-task-cron-driven-scheduling-period")}else{x=f("#reporting-task-timer-driven-scheduling-period")}if(j.isDefinedAndNotNull(x)&&x.val()!==(y.component.schedulingPeriod+"")){return true}return f("#reporting-task-properties").propertytable("isSaveRequired")};var k=function(){var y=f("#reporting-task-properties").propertytable("marshalProperties");var B=f("#reporting-task-scheduling-strategy-combo").combo("getSelectedOption").value;var x;if(B==="CRON_DRIVEN"){x=f("#reporting-task-cron-driven-scheduling-period")}else{x=f("#reporting-task-timer-driven-scheduling-period")}var A={};A.id=f("#reporting-task-id").text();A.name=f("#reporting-task-name").val();A.schedulingStrategy=B;A.schedulingPeriod=x.val();A.comments=f("#reporting-task-comments").val();if(f("#reporting-task-enabled").hasClass("checkbox-unchecked")){A.state="DISABLED"}else{if(f("#reporting-task-enabled").hasClass("checkbox-checked")){A.state="STOPPED"}}if(f.isEmptyObject(y)===false){A.properties=y}var z={};z.component=A;return z};var r=function(x){var z=[];var y=x.component;if(j.isBlank(y.schedulingPeriod)){z.push("Run schedule must be specified")}if(z.length>0){m.showOkDialog({dialogContent:j.formatUnorderedList(z),headerText:"Reporting Task"});return false}else{return true}};var q=function(y){var A=f("#reporting-tasks-table").data("gridInstance");var x=A.getData();var z=x.getItemById(y.id);x.updateItem(y.id,f.extend({type:"ReportingTask",bulletins:z.bulletins},y))};var e=function(z,y){var x={revision:v.getRevision(z),disconnectedNodeAcknowledged:g.isDisconnectionAcknowledged(),state:y===true?"RUNNING":"STOPPED"};return f.ajax({type:"PUT",url:z.uri+"/run-status",data:JSON.stringify(x),dataType:"json",contentType:"application/json"}).done(function(A){q(A);if(j.isDefinedAndNotNull(A.component)){a.reloadReferencedServices(b(),A.component)}}).fail(h.handleAjaxError)};var n=function(){return f.Deferred(function(x){f("#reporting-task-properties").propertytable("saveRow");if(w()){m.showYesNoDialog({headerText:"Save",dialogContent:"Save changes before going to this Controller Service?",noHandler:function(){x.resolve()},yesHandler:function(){var y=f("#reporting-task-configuration").data("reportingTaskDetails");l(y).done(function(){x.resolve()}).fail(function(){x.reject()})}})}else{x.resolve()}}).promise()};var l=function(y){var x=k();if(r(x)){x.revision=v.getRevision(y);x.disconnectedNodeAcknowledged=g.isDisconnectionAcknowledged();return f.ajax({type:"PUT",data:JSON.stringify(x),url:y.uri,dataType:"json",contentType:"application/json"}).done(function(z){q(z)}).fail(h.handleConfigurationUpdateAjaxError)}else{return f.Deferred(function(z){z.reject()}).promise()}};var p=function(x){var y=f("#reporting-task-configuration").data("reportingTaskDetails");return f.ajax({type:"GET",url:y.uri+"/descriptors",data:{propertyName:x},dataType:"json"}).fail(h.handleAjaxError)};var u={init:function(x){s=x;f("#reporting-task-configuration-tabs").tabbs({tabStyle:"tab",selectedTabStyle:"selected-tab",scrollableTabContentStyle:"scrollable",tabs:[{name:"Settings",tabContentId:"reporting-task-standard-settings-tab-content"},{name:"Properties",tabContentId:"reporting-task-properties-tab-content"},{name:"Comments",tabContentId:"reporting-task-comments-tab-content"}],select:function(){o.removeAllPropertyDetailDialogs();if(f(this).text()==="Properties"){f("#reporting-task-properties").propertytable("resetTableSize")}f("#reporting-task-properties").propertytable("saveRow")}});f("#reporting-task-configuration").data("mode",t.edit).modal({scrollableContentStyle:"scrollable",headerText:"Configure Reporting Task",handler:{close:function(){f("#reporting-task-properties").propertytable("cancelEdit");f("#reporting-task-properties").propertytable("clear");j.clearField("read-only-reporting-task-comments");f("#reporting-task-configuration").removeData("reportingTaskDetails")},open:function(){j.toggleScrollable(f("#"+this.find(".tab-container").attr("id")+"-content").get(0))}}});f("#reporting-task-properties").propertytable({readOnly:false,supportsGoTo:true,dialogContainer:"#new-reporting-task-property-container",descriptorDeferred:p,controllerServiceCreatedDeferred:function(y){return c.loadControllerServices(i,f("#controller-services-table"))},goToServiceDeferred:n})},showConfiguration:function(y){var z=f("#reporting-task-configuration");z.find(".dialog-header .dialog-header-text").text("Configure Reporting Task");if(z.data("mode")===t.readOnly){f("#reporting-task-configuration .reporting-task-read-only").hide();f("#reporting-task-configuration .reporting-task-editable").show();f("#reporting-task-properties").propertytable("destroy").propertytable({readOnly:false,supportsGoTo:true,dialogContainer:"#new-reporting-task-property-container",descriptorDeferred:p,controllerServiceCreatedDeferred:function(B){return c.loadControllerServices(i,f("#controller-services-table"))},goToServiceDeferred:n});z.data("mode",t.edit)}var A=f.ajax({type:"GET",url:y.uri,dataType:"json"});var x=f.ajax({type:"GET",url:"../nifi-api/flow/history/components/"+encodeURIComponent(y.id),dataType:"json"});f.when(A,x).done(function(D,I){y=D[0];var J=y.component;var C=I[0].componentHistory;f("#reporting-task-configuration").data("reportingTaskDetails",y);var G="checkbox-checked";if(J.state==="DISABLED"){G="checkbox-unchecked"}j.populateField("reporting-task-id",J.id);j.populateField("reporting-task-type",j.formatType(J));j.populateField("reporting-task-bundle",j.formatBundle(J.bundle));f("#reporting-task-name").val(J.name);f("#reporting-task-enabled").removeClass("checkbox-unchecked checkbox-checked").addClass(G);f("#reporting-task-comments").val(J.comments);var E=J.defaultSchedulingPeriod;var B=f("#reporting-task-cron-driven-scheduling-period").val(E.CRON_DRIVEN);var F=f("#reporting-task-timer-driven-scheduling-period").val(E.TIMER_DRIVEN);if(J.schedulingStrategy==="CRON_DRIVEN"){B.val(J.schedulingPeriod)}else{F.val(J.schedulingPeriod)}f("#reporting-task-scheduling-strategy-combo").combo({options:[{text:"Timer driven",value:"TIMER_DRIVEN",description:"Reporting task will be scheduled to run on an interval defined by the run schedule."},{text:"CRON driven",value:"CRON_DRIVEN",description:"Reporting task will be scheduled to run on at specific times based on the specified CRON string."}],selectedOption:{value:J.schedulingStrategy},select:function(K){if(K.value==="CRON_DRIVEN"){F.hide();B.show()}else{F.show();B.hide()}}});var H=[{buttonText:"Apply",color:{base:"#728E9B",hover:"#004849",text:"#ffffff"},handler:{click:function(){f("#reporting-task-properties").propertytable("saveRow");l(y).done(function(K){a.reloadReferencedServices(b(),K.component);f("#reporting-task-configuration").modal("hide")})}}},{buttonText:"Cancel",color:{base:"#E3E8EB",hover:"#C7D2D7",text:"#004849"},handler:{click:function(){f("#reporting-task-configuration").modal("hide")}}}];if(j.isDefinedAndNotNull(J.customUiUrl)&&J.customUiUrl!==""){H.push({buttonText:"Advanced",clazz:"fa fa-cog button-icon",color:{base:"#E3E8EB",hover:"#C7D2D7",text:"#004849"},handler:{click:function(){var K=function(){f("#reporting-task-configuration").modal("hide");f("#shell-close-button").click();d.showCustomUi(y,J.customUiUrl,true).done(function(){u.reload(y.id).done(function(L){a.reloadReferencedServices(b(),L.reportingTask)});s.showSettings()})};f("#reporting-task-properties").propertytable("saveRow");if(w()){m.showYesNoDialog({headerText:"Save",dialogContent:"Save changes before opening the advanced configuration?",noHandler:K,yesHandler:function(){l(y).done(function(){K()})}})}else{K()}}}})}f("#reporting-task-configuration").modal("setButtonModel",H);f("#reporting-task-properties").propertytable("setGroupId",null).propertytable("loadProperties",J.properties,J.descriptors,C.propertyHistory);f("#reporting-task-configuration").modal("show");f("#reporting-task-properties").propertytable("resetTableSize")}).fail(h.handleAjaxError)},showDetails:function(y){var z=f("#reporting-task-configuration");z.find(".dialog-header .dialog-header-text").text("Reporting Task Details");if(z.data("mode")===t.edit){f("#reporting-task-configuration .reporting-task-read-only").show();f("#reporting-task-configuration .reporting-task-editable").hide();f("#reporting-task-properties").propertytable("destroy").propertytable({supportsGoTo:true,readOnly:true});z.data("mode",t.readOnly)}var A=f.ajax({type:"GET",url:y.uri,dataType:"json"});var x=f.ajax({type:"GET",url:"../nifi-api/flow/history/components/"+encodeURIComponent(y.id),dataType:"json"});f.when(A,x).done(function(B,C){y=B[0];var G=y.component;var D=C[0].componentHistory;j.populateField("reporting-task-id",G.id);j.populateField("reporting-task-type",j.substringAfterLast(G.type,"."));j.populateField("reporting-task-bundle",j.formatBundle(G.bundle));j.populateField("read-only-reporting-task-name",G.name);j.populateField("read-only-reporting-task-comments",G.comments);var F=G.schedulingStrategy;if(F==="CRON_DRIVEN"){F="CRON driven"}else{F="Timer driven"}j.populateField("read-only-reporting-task-scheduling-strategy",F);j.populateField("read-only-reporting-task-scheduling-period",G.schedulingPeriod);var E=[{buttonText:"Ok",color:{base:"#728E9B",hover:"#004849",text:"#ffffff"},handler:{click:function(){z.modal("hide")}}}];if(j.isDefinedAndNotNull(d)&&j.isDefinedAndNotNull(G.customUiUrl)&&G.customUiUrl!==""){E.push({buttonText:"Advanced",clazz:"fa fa-cog button-icon",color:{base:"#E3E8EB",hover:"#C7D2D7",text:"#004849"},handler:{click:function(){z.modal("hide");f("#shell-close-button").click();d.showCustomUi(y,G.customUiUrl,false).done(function(){s.showSettings()})}}})}z.modal("setButtonModel",E).modal("show");f("#reporting-task-properties").propertytable("setGroupId",null).propertytable("loadProperties",G.properties,G.descriptors,D.propertyHistory);z.modal("show");f("#reporting-task-properties").propertytable("resetTableSize")})},start:function(x){e(x,true)},stop:function(x){e(x,false)},reload:function(A){var z=f("#reporting-tasks-table").data("gridInstance");var x=z.getData();var y=x.getItemById(A);return f.ajax({type:"GET",url:y.uri,dataType:"json"}).done(function(B){q(B)}).fail(h.handleAjaxError)},promptToDeleteReportingTask:function(x){m.showYesNoDialog({headerText:"Delete Reporting Task",dialogContent:"Delete reporting task '"+j.escapeHtml(x.component.name)+"'?",yesHandler:function(){u.remove(x)}})},remove:function(y){var x=v.getRevision(y);f.ajax({type:"DELETE",url:y.uri+"?"+f.param({version:x.version,clientId:x.clientId,disconnectedNodeAcknowledged:g.isDisconnectionAcknowledged()}),dataType:"json"}).done(function(A){var B=f("#reporting-tasks-table").data("gridInstance");var z=B.getData();z.deleteItem(y.id)}).fail(h.handleAjaxError)}};return u}));